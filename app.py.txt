import streamlit as st
import requests
import plotly.graph_objs as go

# ------------------------
# CONFIGURAÇÕES INICIAIS
# ------------------------
st.set_page_config(page_title="LeaderTrack - Arquétipos", layout="wide")
st.title("LeaderTrack | Comparativo de Arquétipos")

# ------------------------
# CAMPOS DE ENTRADA
# ------------------------
empresa = st.text_input("Empresa").strip().lower()
codrodada = st.text_input("Rodada").strip().lower()
emaillider = st.text_input("E-mail do líder").strip().lower()

if st.button("Gerar Gráfico"):
    if not all([empresa, codrodada, emaillider]):
        st.error("⚠️ Preencha todos os campos.")
    else:
        # ------------------------
        # CONSULTA AO SUPABASE
        # ------------------------
        url = "https://xmsjjknpnowsswwrbvpc.supabase.co/rest/v1/relatorios_gerados"
        params = {
            "empresa": f"eq.{empresa}",
            "codrodada": f"eq.{codrodada}",
            "emaillider": f"eq.{emaillider}",
            "tipo_relatorio": "eq.arquetipos_grafico_comparativo",
            "select": "dados_json",
            "order": "data_criacao.desc",
            "limit": 1
        }
        headers = {
            "apikey": "SUA_SUPABASE_KEY",
            "Authorization": "Bearer SUA_SUPABASE_KEY"
        }

        response = requests.get(url, headers=headers, params=params)

        if response.status_code == 200 and response.json():
            dados = response.json()[0]["dados_json"]
            arquetipos = dados["arquetipos"]
            auto = dados["autoavaliacao"]
            equipe = dados["mediaEquipe"]

            # ------------------------
            # GRÁFICO
            # ------------------------
            fig = go.Figure()

            fig.add_trace(go.Bar(
                x=arquetipos,
                y=auto,
                name='Autoavaliação',
                marker_color='rgba(0, 123, 255, 0.7)',
                text=[f"{v:.1f}%" for v in auto],
                textposition='auto'
            ))

            fig.add_trace(go.Bar(
                x=arquetipos,
                y=equipe,
                name='Equipe',
                marker_color='rgba(255, 159, 64, 0.7)',
                text=[f"{v:.1f}%" for v in equipe],
                textposition='auto'
            ))

            fig.update_layout(
                title="Comparativo de Arquétipos",
                yaxis=dict(title="%", range=[0, 100], showgrid=True),
                xaxis=dict(title="Arquétipos"),
                barmode='group',
                legend=dict(x=0.85, y=1.15, orientation="h"),
                height=600
            )

            st.plotly_chart(fig, use_container_width=True)
        else:
            st.error("❌ Não foi possível encontrar dados para esses filtros.")
